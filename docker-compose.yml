version: '3.4'
services:
  cadastro.api:
    image: ${DOCKER_REGISTRY-}cadastroapi
    container_name: cadastro.api
    build:
      context: .
      dockerfile: src/Cadastro.API/Dockerfile
    networks:
      - externo
      - base 
    depends_on:    
      - rabbitmq
      - db
      - jaeger

  cadastro.mvc:
    image: ${DOCKER_REGISTRY-}cadastromvc
    container_name: cadastro.mvc
    build:
      context: .
      dockerfile: src/Cadastro.MVC/Dockerfile
    networks:
      - externo

  cadastro.workerservice:
    image: ${DOCKER_REGISTRY-}cadastroworker
    container_name: cadastro.worker
    build:
      context: .
      dockerfile: src/Cadastro.WorkerService/Dockerfile
    networks:
      - externo
      - base
    depends_on:
      - db
      - rabbitmq
      - jaeger

  cadastro.angular:
    image: angular
    build:
      context: ./src/cadastro.angular/
      dockerfile: Dockerfile
    container_name: cadastro.angular
    depends_on:
      - cadastro.api
    networks:
      - externo
    ports:
      - 4200:80

  db:
    image: postgres:13.3-alpine
    container_name: cadastro.db
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db01
    # Un-comment to access the db service directly
    ports:
      - 5432:5432
    networks:
      - base
    restart: unless-stopped
    volumes:
      - dbData:/var/lib/postgresql/data

  rabbitmq:    
    image: rabbitmq:3.9-plugins
    container_name: rabbitmq
    build:
      context: ./src/Rabbitmq
    ports:
      - 15672:15672  #Management
      - 5672:5672    #AMQP
      - 15692:15692  #metrics
    environment:
      RABBITMQ_DEFAULT_USER: mc
      RABBITMQ_DEFAULT_PASS: mc2
      RABBITMQ_DEFAULT_VHOST: main
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      timeout: 5s
      retries: 3
    volumes:
      - mq_data:/var/lib/rabbitmq/mnesia
    networks: 
      - base
      - externo

  #keycloak:
  #  image: quay.io/keycloak/keycloak:17.0.0
  #  container_name: keycloak
  #  command:
  #   - start-dev
  #  environment:
  #    - KC_DB=postgres
  #    - KC_DB_USERNAME=postgres
  #    - KC_DB_PASSWORD=postgres
  #    - KC_DB_URL=jdbc:postgresql://db/db01
  #    - DB_DATABASE=db01
  #    - KEYCLOAK_ADMIN=admin
  #    - KEYCLOAK_ADMIN_PASSWORD=admin
  #    - PROXY_ADDRESS_FORWARDING=true
  #    - KC_PROXY=edge
  #    - KC_METRICS_ENABLED=true
  #    - KC_HOSTNAME=keycloak.localhost
  #    - KC_FEATURES=token-exchange
  #  depends_on:
  #    - db
  #  networks:
  #    - base
  #    - externo
  #  ports:
  #    - 8088:8080
  #    - 9099:9090

  jaeger:
    image: jaegertracing/all-in-one:1.35
    container_name: jaeger
    environment:
        - COLLECTOR_OTLP_ENABLED=true
        - JAEGER_AGENT_HOST="jaeger"
    ports:
      - 6831:6831/udp 
      - 6832:6832/udp 
      - 5778:5778 
      - 16686:16686 
      - 4317:4317 
      - 4318:4318 
      - 14250:14250 
      - 14268:14268 
      - 14269:14269 
      - 9411:9411 
    networks:
      - externo
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:v2.37.0
    container_name: prometheus    
    volumes: 
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    depends_on:
      - cadastro.api
    networks:
      - externo
      - base

  grafana:
    image: grafana/grafana-oss:9.0.6
    container_name: grafana     
    environment:
        - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - externo

  nginx:
    image: nginx:1.23.1-alpine
    container_name: nginx
    domainname: localhost
    volumes:
       - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf
       - ./src/nginx/nginxconfig:/etc/nginx/conf.d/
       - ./src/nginx/certificate:/etc/ssl/certs/       
    ports:
       - 80:80
       - 443:443
       - 8080:8080
       - 9090:9090
       - 9011:9011
    networks:
      - externo
    depends_on:
      #- fusionauth
      - cadastro.mvc
      - cadastro.angular      
      - cadastro.api      
      #- keycloak
    environment: 
      - NGINX_HOST=localhost
      - NGINX_PORT=80  

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:0.10
    container_name: nginx-prometheus-exporter
    command:
     - -nginx.scrape-uri http://192.168.0.17/metrics
    ports:
     -  9113:9113
    networks:
      - externo
    depends_on:
      - nginx
      - prometheus



networks:
  base:
  externo:
volumes:
  dbData:
  mq_data:
  grafana_data:

