version: '3.4'
services:
  cadastro.api:
    image: ${DOCKER_REGISTRY-}cadastroapi
    container_name: cadastro.api
    build:
      context: .
      dockerfile: src/API/Dockerfile
    networks:
      - externo
      - base 
    depends_on:    
      - rabbitmq
      - db

  cadastro.mvc:
    image: ${DOCKER_REGISTRY-}cadastromvc
    container_name: cadastro.mvc
    build:
      context: .
      dockerfile: src/MVC/Dockerfile
    networks:
      - externo

  cadastro.workerservice:
    image: ${DOCKER_REGISTRY-}cadastroworker
    container_name: cadastro.worker
    build:
      context: .
      dockerfile: src/Cadastro.WorkerService/Dockerfile
    networks:
      - externo
      - base
    depends_on:
      - db
      - rabbitmq

  cadastro.angular:
    image: angular
    build:
      context: ./src/angular/
      dockerfile: Dockerfile
    container_name: cadastro.angular
    depends_on:
      - cadastro.api
    networks:
      - externo
    ports:
      - 4200:80

  db:
    image: postgres:13.3-alpine
    container_name: cadastro.db
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db01
    # Un-comment to access the db service directly
    ports:
      - 5432:5432
    networks:
      - base
    restart: unless-stopped
    volumes:
      - dbData:/var/lib/postgresql/data

  rabbitmq:    
    image: rabbitmq:3.9-plugins
    container_name: rabbitmq
    build:
      context: ./src/Rabbitmq
    ports:
      - 15672:15672  #Management
      - 5672:5672    #AMQP
    environment:
      RABBITMQ_DEFAULT_USER: mc
      RABBITMQ_DEFAULT_PASS: mc2
      RABBITMQ_DEFAULT_VHOST: main
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      timeout: 5s
      retries: 3
    volumes:
      - mq_data:/var/lib/rabbitmq/mnesia
    networks: 
      - base
      - externo
  
  # traefik:
  #   image: traefik:v2.5
  #   container_name: traefik
  #   # hostname: "traefik"
  #   ports:
  #     - "80:80"
  #     - "8089:8080"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./traefik.yml:/traefik.yml:ro"
  #   networks:
  #     - externo
  #     - externo1
  #   depends_on:
  #     - fusionauth
  #     - cadastro.mvc
  #     - angular      
  #     - cadastro.api      
  #     - keycloak

  #fusionauth:
  #  image: fusionauth/fusionauth-app:1.33.0
  #  container_name: fusionauth
  #  depends_on:
  #    - db
  #  environment:
  #      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
  #      # Prior to version 1.19.0, use this deprecated name
  #      # DATABASE_ROOT_USER: ${POSTGRES_USER}
  #      DATABASE_ROOT_USERNAME: postgres
  #      DATABASE_ROOT_PASSWORD: postgres
  #      # Prior to version 1.19.0, use this deprecated name
  #      # DATABASE_USER: ${DATABASE_USER}
  #      DATABASE_USERNAME: postgres
  #      DATABASE_PASSWORD: postgres
  #      # Prior to version 1.19.0, use this deprecated names
  #      # FUSIONAUTH_MEMORY: ${FUSIONAUTH_MEMORY}
  #      # FUSIONAUTH_SEARCH_ENGINE_TYPE: database
  #      # FUSIONAUTH_URL: http://fusionauth:9011
  #      # FUSIONAUTH_RUNTIME_MODE: development
  #      FUSIONAUTH_APP_MEMORY: 512M
  #      FUSIONAUTH_APP_RUNTIME_MODE: development
  #      FUSIONAUTH_APP_URL: http://fusionauth:9011
  #      SEARCH_TYPE: database
  #  networks:
  #    - externo
  #    - base
  #  restart: unless-stopped
  #  ports:
  #    - 91:9011
  #  volumes:
  #    - fa_config:/usr/local/fusionauth/config

  #keycloak:
  #  image: quay.io/keycloak/keycloak:17.0.0
  #  container_name: keycloak
  #  command:
  #   - start-dev
  #  environment:
  #    - KC_DB=postgres
  #    - KC_DB_USERNAME=postgres
  #    - KC_DB_PASSWORD=postgres
  #    - KC_DB_URL=jdbc:postgresql://db/db01
  #    - DB_DATABASE=db01
  #    - KEYCLOAK_ADMIN=admin
  #    - KEYCLOAK_ADMIN_PASSWORD=admin
  #    - PROXY_ADDRESS_FORWARDING=true
  #    - KC_PROXY=edge
  #    - KC_METRICS_ENABLED=true
  #    - KC_HOSTNAME=keycloak.localhost
  #    - KC_FEATURES=token-exchange
  #  depends_on:
  #    - db
  #  networks:
  #    - base
  #    - externo
  #  ports:
  #    - 8088:8080
  #    - 9099:9090

  nginx:
    image: nginx:1.21.0-alpine
    container_name: nginx
    domainname: localhost
    volumes:
       - ./src/keycloak/nginx.conf:/etc/nginx/nginx.conf
       - ./src/keycloak/nginxconfig:/etc/nginx/conf.d/
       - ./src/keycloak/certificate:/etc/ssl/certs/
    ports:
       - 80:80
       - 443:443
       - 8080:8080
       - 9090:9090
       - 9011:9011
    networks:
      - externo
    depends_on:
      #- fusionauth
      - cadastro.mvc
      - cadastro.angular      
      - cadastro.api      
      #- keycloak
    environment: 
      - NGINX_HOST=localhost
      - NGINX_PORT=80  



networks:
  base:
  externo:
volumes:
  dbData:
  dbLog:
  dbSecrets:
  fa_config:  
  mq_data:

